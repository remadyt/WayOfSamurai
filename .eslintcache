[{"D:\\it-incubator\\WayOfSamurai\\src\\redux\\redux-store.ts":"1","D:\\it-incubator\\WayOfSamurai\\src\\components\\Header\\Header.tsx":"2","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\Profile.tsx":"3","D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\Dialogs.tsx":"4","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"5","D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\DialogsContainer.tsx":"6","D:\\it-incubator\\WayOfSamurai\\src\\App.tsx":"7","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"8","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\Posts\\Post.tsx":"9","D:\\it-incubator\\WayOfSamurai\\src\\redux\\dialogs-reducer.tsx":"10","D:\\it-incubator\\WayOfSamurai\\src\\redux\\profile-reducer.tsx":"11","D:\\it-incubator\\WayOfSamurai\\src\\index.tsx":"12","D:\\it-incubator\\WayOfSamurai\\src\\components\\Navbar\\Navbar.tsx":"13","D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\Users.tsx":"14","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"15","D:\\it-incubator\\WayOfSamurai\\src\\redux\\user-reducer.ts":"16","D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\UsersContainer.tsx":"17"},{"size":424,"mtime":1617459174686,"results":"18","hashOfConfig":"19"},{"size":301,"mtime":1617457265220,"results":"20","hashOfConfig":"19"},{"size":364,"mtime":1617458363990,"results":"21","hashOfConfig":"19"},{"size":1634,"mtime":1617556444348,"results":"22","hashOfConfig":"19"},{"size":1002,"mtime":1617461097380,"results":"23","hashOfConfig":"19"},{"size":1061,"mtime":1617627763460,"results":"24","hashOfConfig":"19"},{"size":989,"mtime":1617627806471,"results":"25","hashOfConfig":"19"},{"size":1347,"mtime":1617556444354,"results":"26","hashOfConfig":"19"},{"size":525,"mtime":1617457265220,"results":"27","hashOfConfig":"19"},{"size":1554,"mtime":1617557707549,"results":"28","hashOfConfig":"19"},{"size":1286,"mtime":1617624314365,"results":"29","hashOfConfig":"19"},{"size":331,"mtime":1617551224651,"results":"30","hashOfConfig":"19"},{"size":658,"mtime":1617984320741,"results":"31","hashOfConfig":"19"},{"size":1805,"mtime":1618045075623,"results":"32","hashOfConfig":"19"},{"size":527,"mtime":1617457265220,"results":"33","hashOfConfig":"19"},{"size":1533,"mtime":1618043510096,"results":"34","hashOfConfig":"19"},{"size":1146,"mtime":1618044821996,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gqdnj9",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\it-incubator\\WayOfSamurai\\src\\redux\\redux-store.ts",["76"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Header\\Header.tsx",[],["77","78"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\Profile.tsx",["79"],"import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {StoreType} from \"../../typeAll\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo  />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default Profile;\r\n\r\n","D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\Dialogs.tsx",[],["80","81"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["82"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\DialogsContainer.tsx",["83","84"],"import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {dialogsPageType} from \"../../typeAll\";\r\nimport {sendMessageCreate, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    state: dialogsPageType\r\n}\r\ntype mapDispatchToProps = {\r\n    onSendMessageClick: () => void,\r\n    onNewMessageChange: (body:string) => void\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):mapStateToPropsType => {\r\n    return{\r\n        state: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch):mapDispatchToProps => {\r\n    return{\r\n        onSendMessageClick: () => {\r\n            dispatch(sendMessageCreate())\r\n        },\r\n        onNewMessageChange: (body:string ) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps) (Dialogs)\r\nexport default DialogsContainer\r\n",["85","86"],"D:\\it-incubator\\WayOfSamurai\\src\\App.tsx",["87"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\Posts\\Post.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\redux\\dialogs-reducer.tsx",["88"],"import {\r\n    ActionsType,\r\n    dialogsPage,\r\n    dialogsPageType,\r\n    messageType,\r\n    sendMessageType,\r\n    updateNewMessageBody\r\n} from \"../typeAll\";\r\n\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'How are you?'},\r\n        {id: 2, message: 'How old are you'},\r\n        {id: 3, message: 'Where are you from?'},\r\n    ] as Array<messageType>,\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitriy'},\r\n        {id: 2, name: 'Maxim'},\r\n        {id: 3, name: 'Kirill'},\r\n    ] as Array<dialogsPage>,\r\n    newMessageBody: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\n\r\nexport const sendMessageCreate = (): sendMessageType => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body: string): updateNewMessageBody => ({\r\n    type: UPDATE_NEW_MESSAGE_BODY,\r\n    body: body\r\n})\r\n\r\n\r\nexport default dialogsReducer","D:\\it-incubator\\WayOfSamurai\\src\\redux\\profile-reducer.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\index.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\Users.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\redux\\user-reducer.ts",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\UsersContainer.tsx",["89","90"],{"ruleId":"91","severity":1,"message":"92","line":4,"column":9,"nodeType":"93","messageId":"94","endLine":4,"endColumn":18},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":9,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"91","severity":1,"message":"101","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"101","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":24,"column":7,"nodeType":"93","messageId":"104","endLine":24,"endColumn":25},{"ruleId":"95","replacedBy":"105"},{"ruleId":"97","replacedBy":"106"},{"ruleId":"91","severity":1,"message":"107","line":8,"column":8,"nodeType":"93","messageId":"94","endLine":8,"endColumn":13},{"ruleId":"91","severity":1,"message":"108","line":4,"column":5,"nodeType":"93","messageId":"94","endLine":4,"endColumn":20},{"ruleId":"91","severity":1,"message":"101","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"109","line":6,"column":19,"nodeType":"93","messageId":"94","endLine":6,"endColumn":35},"@typescript-eslint/no-unused-vars","'StoreType' is defined but never used.","Identifier","unusedVar","no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"'React' is defined but never used.","@typescript-eslint/no-redeclare","'mapDispatchToProps' is already defined.","redeclared",["110"],["111"],"'Users' is defined but never used.","'dialogsPageType' is defined but never used.","'InitialStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]