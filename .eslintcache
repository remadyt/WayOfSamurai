[{"D:\\it-incubator\\WayOfSamurai\\src\\redux\\redux-store.ts":"1","D:\\it-incubator\\WayOfSamurai\\src\\components\\Header\\Header.tsx":"2","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\Profile.tsx":"3","D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\Dialogs.tsx":"4","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"5","D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\DialogsContainer.tsx":"6","D:\\it-incubator\\WayOfSamurai\\src\\App.tsx":"7","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"8","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\Posts\\Post.tsx":"9","D:\\it-incubator\\WayOfSamurai\\src\\redux\\dialogs-reducer.tsx":"10","D:\\it-incubator\\WayOfSamurai\\src\\redux\\profile-reducer.tsx":"11","D:\\it-incubator\\WayOfSamurai\\src\\index.tsx":"12","D:\\it-incubator\\WayOfSamurai\\src\\components\\Navbar\\Navbar.tsx":"13","D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\Users.tsx":"14","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"15","D:\\it-incubator\\WayOfSamurai\\src\\redux\\user-reducer.ts":"16","D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\UsersContainer.tsx":"17","D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\ProfileContainer.tsx":"18","D:\\it-incubator\\WayOfSamurai\\src\\redux\\auth-reducer.tsx":"19","D:\\it-incubator\\WayOfSamurai\\src\\components\\Header\\HeaderContainer.tsx":"20"},{"size":424,"mtime":1617459174686,"results":"21","hashOfConfig":"22"},{"size":655,"mtime":1619103585203,"results":"23","hashOfConfig":"24"},{"size":458,"mtime":1618838211038,"results":"25","hashOfConfig":"24"},{"size":1672,"mtime":1618506952736,"results":"26","hashOfConfig":"24"},{"size":1002,"mtime":1617461097380,"results":"27","hashOfConfig":"22"},{"size":607,"mtime":1618506878731,"results":"28","hashOfConfig":"24"},{"size":992,"mtime":1619097408100,"results":"29","hashOfConfig":"24"},{"size":1337,"mtime":1618505915663,"results":"30","hashOfConfig":"24"},{"size":525,"mtime":1617457265220,"results":"31","hashOfConfig":"24"},{"size":1518,"mtime":1618506648088,"results":"32","hashOfConfig":"24"},{"size":1641,"mtime":1618839107679,"results":"33","hashOfConfig":"24"},{"size":342,"mtime":1619099219323,"results":"34","hashOfConfig":"24"},{"size":658,"mtime":1617984320741,"results":"35","hashOfConfig":"24"},{"size":3776,"mtime":1619176653579,"results":"36","hashOfConfig":"24"},{"size":856,"mtime":1618840022653,"results":"37","hashOfConfig":"24"},{"size":2572,"mtime":1618825613589,"results":"38","hashOfConfig":"24"},{"size":3139,"mtime":1619176896891,"results":"39","hashOfConfig":"24"},{"size":1915,"mtime":1619093878405,"results":"40","hashOfConfig":"24"},{"size":973,"mtime":1619103769768,"results":"41","hashOfConfig":"24"},{"size":1141,"mtime":1619103560381,"results":"42","hashOfConfig":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gqdnj9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1192i2p",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\it-incubator\\WayOfSamurai\\src\\redux\\redux-store.ts",["87"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Header\\Header.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\Profile.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\Dialogs.tsx",["88"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["89"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Dialogs\\DialogsContainer.tsx",["90"],"import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {dialogsPageType} from \"../../typeAll\";\r\nimport {sendMessage, updateNewMessage} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    state: dialogsPageType\r\n}\r\n\r\n\r\nconst mapStateToProps = (state:AppStateType):mapStateToPropsType => {\r\n    return{\r\n        state: state.dialogsPage\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,{sendMessage, updateNewMessage})(Dialogs)\r\nexport default DialogsContainer\r\n",["91","92"],"D:\\it-incubator\\WayOfSamurai\\src\\App.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\MyPosts\\Posts\\Post.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\redux\\dialogs-reducer.tsx",["93"],"import {\r\n    ActionsType,\r\n    dialogsPage,\r\n    dialogsPageType,\r\n    messageType,\r\n    sendMessageType,\r\n    updateNewMessageType\r\n} from \"../typeAll\";\r\n\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'How are you?'},\r\n        {id: 2, message: 'How old are you'},\r\n        {id: 3, message: 'Where are you from?'},\r\n    ] as Array<messageType>,\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitriy'},\r\n        {id: 2, name: 'Maxim'},\r\n        {id: 3, name: 'Kirill'},\r\n    ] as Array<dialogsPage>,\r\n    newMessageBody: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\n\r\nexport const sendMessage = (): sendMessageType => ({type: SEND_MESSAGE})\r\nexport const updateNewMessage = (body: string): updateNewMessageType => ({type: UPDATE_NEW_MESSAGE_BODY, body})\r\n\r\n\r\nexport default dialogsReducer","D:\\it-incubator\\WayOfSamurai\\src\\redux\\profile-reducer.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\index.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Navbar\\Navbar.tsx",[],["94","95"],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\Users.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["96"],"D:\\it-incubator\\WayOfSamurai\\src\\redux\\user-reducer.ts",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Profile\\ProfileContainer.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\redux\\auth-reducer.tsx",[],"D:\\it-incubator\\WayOfSamurai\\src\\components\\Header\\HeaderContainer.tsx",[],{"ruleId":"97","severity":1,"message":"98","line":4,"column":9,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":6,"column":9,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":13},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"97","severity":1,"message":"107","line":4,"column":5,"nodeType":"99","messageId":"100","endLine":4,"endColumn":20},{"ruleId":"103","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":24,"column":17,"nodeType":"112","endLine":24,"endColumn":57},"@typescript-eslint/no-unused-vars","'StoreType' is defined but never used.","Identifier","unusedVar","'sendMessage' is defined but never used.","'React' is defined but never used.","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'dialogsPageType' is defined but never used.",["113"],["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]